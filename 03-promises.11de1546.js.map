{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SASMC,EAASC,SAASC,cAAc,SAChCC,EAAeF,SAASC,cAAc,uBACtCE,EAAcH,SAASC,cAAc,sBACrCG,EAAgBJ,SAASC,cAAc,wBACzCI,EAAQ,KACRC,EAAO,KACPC,EAAS,KA0Cb,SAASC,EAAcC,EAAUC,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,GACFF,EAAQ,CAAEH,WAAUS,MAAAR,IAGtBG,EAAO,CAAEJ,WAAUS,MAAAR,G,GAClBA,E,IAbPX,EAAOoB,iBAAiB,UArCxB,SAAsBC,GAECA,EAAfC,iBAGgBhB,EAAdiB,OAAOpB,EAAaqB,OAC5BjB,EAAOgB,OAAOnB,EAAYoB,OAC1BhB,EAASe,OAAOlB,EAAcmB,QAM1BlB,EAAQ,GAAKC,EAAO,GAAKC,GAAU,IACrCiB,EAAA3B,GAAS4B,OAAOC,QAAS,gCAIA,IAAtB,IAAIC,EAAI,EAAGA,GAAKpB,EAAQoB,GAAK,EAAG,CAGnCnB,EADemB,EACStB,GAEOuB,MAAvB,SAAAC,G,IAAGpB,EAAQoB,EAARpB,SAAUqB,EAAKD,EAALX,MACjBM,EAAA3B,GAAS4B,OAAOM,QAAQ,qBAAoCC,OAAfvB,EAAS,QAAYuB,OAANF,EAAM,M,IAGvCG,OAAtB,SAAAJ,G,IAAGpB,EAAQoB,EAARpB,SAAUyB,EAAKL,EAALX,MAClBM,EAAA3B,GAAS4B,OAAOC,QAAQ,oBAAmCM,OAAfvB,EAAS,QAAYuB,OAANE,EAAM,M,IAGzD7B,GAAHC,C,CAGCP,EAALoC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\nimport 'notiflix/dist/notiflix-3.2.6.min.css'\n\n\n//Напиши скрипт, який на момент сабміту форми викликає функцію \n//createPromise(position, delay) стільки разів, скільки ввели в \n//поле amount.Під час кожного виклику передай їй номер промісу\n//(position), що створюється, і затримку, враховуючи першу \n//затримку(delay), введену користувачем, і крок(step).\nconst formEl = document.querySelector(\".form\");\nconst dilayInputEl = document.querySelector('input[name=\"delay\"]');\nconst stepInputEl = document.querySelector('input[name=\"step\"]');\nconst amountInputEl = document.querySelector('input[name=\"amount\"]');\nlet dilay = null;\nlet step = null;\nlet amount = null;\n// console.log(formEl);\n\nfunction onFormSubmit(event) {\n  //заборонив перезагрузку\n  event.preventDefault();\n\n  //знайшов введені значення\n  dilay = Number(dilayInputEl.value); \n  step = Number(stepInputEl.value); \n  amount = Number(amountInputEl.value); \n  // console.log(dilay);\n  // console.log(step);\n  // console.log(amount);\n\n  //перевіряю на введення некоректних даних\n  if (dilay < 0 || step < 0 || amount <= 0) {\n    Notiflix.Notify.failure(`Please enter a correct value`);\n  }\n\n  //роблю цикл який створює проміси\n  for (let i = 1; i <= amount; i += 1) {\n    //початкова позиція 1\n    let position = i;\n    createPromise(position, dilay)\n      //обробка позитивного результату\n      .then(({ position, dilay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${dilay}ms`);\n      })\n      //обробка негативного результату\n      .catch(({ position, dilay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${dilay}ms`);\n      });\n    //оновлюю ділей\n    dilay += step;\n  }\n  //очистка форми\n  formEl.reset();\n}\n\nformEl.addEventListener(\"submit\", onFormSubmit);\n\nfunction createPromise(position, dilay) {\n  //функція повертає проміс\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, dilay });\n      }\n\n      reject({ position, dilay });\n    }, dilay);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$dilayInputEl","$ce04d3a99e08e73b$var$stepInputEl","$ce04d3a99e08e73b$var$amountInputEl","$ce04d3a99e08e73b$var$dilay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","dilay3","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","dilay","addEventListener","event","preventDefault","Number","value","$parcel$interopDefault","Notify","failure","i","then","param","dilay1","success","concat","catch","dilay2","reset"],"version":3,"file":"03-promises.11de1546.js.map"}